<?xml version="1.0"?>
<launch>
  <!-- valid for summitxl - summitxl hl - summitxl hls -->
  <!-- The environment variables should be set in a file or .bashrc -->
  
  <arg name="id_robot" default="$(optenv ROBOT_ID summit_xl)"/>
  <arg name="xacro_robot_a" default="$(optenv ROBOT_XACRO summit_xl.urdf.xacro)"/>
  <!-- 2D LASERS -->
  <arg name="has_front_laser" default="$(optenv ROBOT_HAS_FRONT_LASER false)"/>
  <arg name="front_laser_model" default="$(optenv ROBOT_FRONT_LASER_MODEL hokuyo_ust)"/>
  <arg name="front_laser_port" default="$(optenv ROBOT_FRONT_LASER_PORT /dev/ttyACM_FRONT_LASER)"/>
  <arg name="front_laser_ip" default="$(optenv ROBOT_FRONT_LASER_IP 192.168.0.10)"/>
  <arg name="front_laser_node" default="front_laser"/>

  <arg name="has_rear_laser" default="$(optenv ROBOT_HAS_REAR_LASER false)"/>
  <arg name="rear_laser_model" default="$(optenv ROBOT_REAR_LASER_MODEL hokuyo_ust)"/>
  <arg name="rear_laser_port" default="$(optenv ROBOT_REAR_LASER_PORT /dev/ttyACM_REAR_LASER)"/>
  <arg name="rear_laser_ip" default="$(optenv ROBOT_REAR_LASER_IP 192.168.0.11)"/>
  <arg name="rear_laser_node" default="rear_laser"/>
  
  <!-- PTZ CAMERAS -->
  <arg name="has_front_ptz_camera" default="$(optenv ROBOT_HAS_FRONT_PTZ_CAMERA false)"/>
  <arg name="front_ptz_camera_node" default="front_ptz_camera"/>
  <arg name="front_camera_ip" default="$(optenv ROBOT_FRONT_PTZ_CAMERA_IP 192.168.0.185)"/>
  <arg name="front_camera_model" default="$(optenv ROBOT_FRONT_CAMERA_MODEL axis_p5534)"/>


  <arg name="has_rear_ptz_camera" default="$(optenv ROBOT_HAS_REAR_PTZ_CAMERA false)"/>
  <arg name="rear_ptz_camera_node" default="rear_ptz_camera"/>
  <arg name="rear_camera_ip" default="$(optenv ROBOT_REAR_PTZ_CAMERA_IP 192.168.0.186)"/>
  <arg name="rear_camera_model" default="$(optenv ROBOT_REAR_CAMERA_MODEL axis_p5534)"/>

  <!-- RGBD CAMERAS -->
  <arg name="has_front_rgbd_camera" default="$(optenv ROBOT_HAS_FRONT_RGBD_CAMERA false)"/>
  <arg name="front_rgbd_camera_node" default="front_rgbd_camera"/>
  <arg name="front_rgbd_camera_id" default="$(optenv ROBOT_FRONT_RGBD_CAMERA_ID #1)"/>
  
  <arg name="has_rear_rgbd_camera" default="$(optenv ROBOT_HAS_REAR_RGBD_CAMERA false)"/>
  <arg name="rear_rgbd_camera_node" default="rear_rgbd_camera"/>
  <arg name="rear_rgbd_camera_id" default="$(optenv ROBOT_REAR_RGBD_CAMERA_ID #1)"/>
  
  <!-- OTHERS -->
  <arg name="has_gps" default="$(optenv ROBOT_HAS_GPS false)"/>
  <arg name="pad_model" default="$(optenv ROBOT_PAD_MODEL ps4)"/>
  
  <!-- AMCL und Map und MoveBase -->
  <arg name="launch_amcl_and_mapserver" default="true"/>
  <arg name="map_file" default="whs/whs_map.yaml"/> <!--~/catkin_ws/src/summit_xl_common/summit_xl_localization/-->
  <arg name="ros_planar_move_plugin" default="false"/>
  <arg name="x_init_pose" default="0"/>
  <arg name="y_init_pose" default="0"/>
  <arg name="z_init_pose" default="0"/>
  <arg name="launch_move_base" default="true"/>



  <group ns="$(arg id_robot)">
	  
	  <arg name="prefix" value="$(arg id_robot)_"/> 

	  <!-- start robot_state_publisher - publish fixed transforms, load robot model to param server -->
	  <include file="$(find summit_xl_description)/launch/summit_xl_state_robot.launch">
		<arg name="prefix" value="$(arg prefix)"/>
		<arg name ="robot_model" value ="$(arg xacro_robot_a)"/>
	  </include>

	  <!-- start summit_xl_pad nodes -->
	  <include file="$(find summit_xl_bringup)/launch/summit_xl_pad.launch">
		  <arg name="pad_model" value="$(arg pad_model)"/>
	  </include>

	  
	  <!-- start robotnik_base_hw nodes -->  
	  <include file="$(find summit_xl_bringup)/launch/robotnik_base_hw.launch"> 
		<arg name="prefix" value="$(arg prefix)"/>
	  </include>
	  <!-- start summit_xl_control nodes -->  
	  <include file="$(find summit_xl_control)/launch/summit_xl_control.launch"> 
		<arg name="prefix" value="$(arg prefix)"/>
	  </include>

	  <!-- start nmea gps -->
	  <include if="$(arg has_gps)" file="$(find summit_xl_bringup)/launch/gps_nmea.launch" >
		<arg name="frame_id" value="$(arg prefix)gps_link"/>
	  </include>

	  <!-- start axis camera -->
	  <include if="$(arg has_front_ptz_camera)" file="$(find summit_xl_bringup)/launch/axis.launch"> 
		  <arg name="prefix" value="$(arg prefix)"/>
		  <arg name="node_name" value="$(arg front_ptz_camera_node)"/>
		  <arg name="id_robot" value="$(arg id_robot)"/>
		  <arg name="ip_address" value="$(arg front_camera_ip)"/>
		  <arg name="camera_model" value="$(arg front_camera_model)"/>
	  </include>

          <include if="$(arg has_rear_ptz_camera)" file="$(find summit_xl_bringup)/launch/axis.launch"> 
		  <arg name="prefix" value="$(arg prefix)"/>
		  <arg name="node_name" value="$(arg rear_ptz_camera_node)"/>
		  <arg name="id_robot" value="$(arg id_robot)"/>
		  <arg name="ip_address" value="$(arg rear_camera_ip)"/>
		  <arg name="camera_model" value="$(arg rear_camera_model)"/>
	  </include>
 
	  <!-- start complementary_filter and pixhawk node filter -->
	  <include file="$(find summit_xl_bringup)/launch/pixhawk.launch"/>

	  <include file="$(find summit_xl_localization)/launch/rl_utils.launch"/>
  
	  <!-- start summit_xl_web server
	  <include file="$(find summit_xl_web)/launch/summit_xl_web.launch"/>
	  -->
	  
	  <!-- start laser node -->
	  <include if="$(arg has_front_laser)" file="$(find summit_xl_bringup)/launch/$(arg front_laser_model).launch">
		<arg name="port" value="$(arg front_laser_port)"/> 
		<arg name="ip_address" value="$(arg front_laser_ip)"/>
		<arg name="node_name" value="$(arg front_laser_node)"/>
		<arg name="frame_id" value="$(arg prefix)front_laser_link"/>
	  </include>

	  <include if="$(arg has_rear_laser)" file="$(find summit_xl_bringup)/launch/$(arg rear_laser_model).launch">
		<arg name="port" value="$(arg rear_laser_port)"/>
		<arg name="ip_address" value="$(arg rear_laser_ip)"/> 
		<arg name="node_name" value="$(arg rear_laser_node)"/>
		<arg name="frame_id" value="$(arg prefix)rear_laser_link"/>
	  </include>
	
	  <!-- start rgbd camera node -->
	  <include if="$(arg has_front_rgbd_camera)" file="$(find summit_xl_bringup)/launch/orbbec.launch">
		<arg name="camera" value="$(arg front_rgbd_camera_node)"/>
		<arg name="prefix" value="$(arg prefix)$(arg front_rgbd_camera_node)"/>
		<arg name="device_id" value="$(arg front_rgbd_camera_id)"/> 
	  </include>

	  <include if="$(arg has_rear_rgbd_camera)" file="$(find summit_xl_bringup)/launch/orbbec.launch">
		<arg name="camera" value="$(arg rear_rgbd_camera_node)"/>
		<arg name="prefix" value="$(arg prefix)$(arg rear_rgbd_camera_node)"/>
		<arg name="device_id" value="$(arg rear_rgbd_camera_id)"/> 
	  </include>
	 
	  <!--</include> -->
	  <!-- start system monitor node 
           <include file="$(find system_monitor)/launch/system_monitor.launch">
	   </include>   -->
	   
	   
	  <!--summit_xl_localization amcl.launch --> 
	<!--summit_xl_localization map_server.launch -->   
	<!-- amcl and map server base-->
		<include if="$(arg launch_amcl_and_mapserver)" file="$(find summit_xl_localization)/launch/map_server.launch">
			<arg name="prefix" value="$(arg prefix)"/>
			<arg name="map_file" value="$(arg map_file)"/>
		</include>
		
		<include if="$(arg launch_amcl_and_mapserver)" file="$(find summit_xl_localization)/launch/amcl.launch">
			<arg name="prefix" value="$(arg prefix)"/>
			<arg if="$(arg ros_planar_move_plugin)" name="odom_model_type" value="omni"/>
			<arg unless="$(arg ros_planar_move_plugin)" name="odom_model_type" value="diff"/>
			<arg name="x_init_pose" value="$(arg x_init_pose)"/>
			<arg name="y_init_pose" value="$(arg y_init_pose)"/>
			<arg name="z_init_pose" value="$(arg z_init_pose)"/>
		</include>


	<!--summit_xl_navigation move_base.launch -->
   	<!-- move base -->
		<include if="$(arg launch_move_base)" file="$(find summit_xl_navigation)/launch/move_base.launch">
			<arg name="prefix" value="$(arg prefix)"/>
			<arg name="omni" value="$(arg ros_planar_move_plugin)"/>
		</include>

  </group>

</launch>

